--- STEAMODDED HEADER
--- MOD_NAME: Aiz Jokers
--- MOD_ID: JAIZ
--- MOD_AUTHOR: [Aiz]
--- MOD_DESCRIPTION: jank jokers

----------------------------------------------
------------MOD CODE -------------------------

-- Config: DISABLE UNWANTED MODS HERE
local config = {
	-- Categories
	allEnabled = true,
	jokersEnabled = true,
	-- Jokers
	backwardsLongJump = false, -- WIP / Broken
	chillJoker = true,
	loudspeaker = true,
	easyMode = true,
	antiBubzia = true,
	blÃ¥haj = true,
	chess_pawn = true,
	chess_knight = true,
	chess_bishop = true,
	chess_rook = true,
	chess_queen = true,
	chess_king = true,
	hand_size = true,
	tetris = true,
	penny = true,
	trollker = true,
	jay_Z = true,
	chaos = true,
}

-- Helper functions
-- Some are Copied from Mikas Mod Collection
-- https://github.com/MikaSchoenmakers/MikasBalatro/tree/main

local function init_joker(joker, no_sprite)
	no_sprite = no_sprite or false

	local new_joker = SMODS.Joker:new(
		joker.ability_name,
		joker.slug,
		joker.ability,
		{ x = 0, y = 0 },
		joker.loc,
		joker.rarity,
		joker.cost,
		joker.unlocked,
		joker.discovered,
		joker.blueprint_compat,
		joker.eternal_compat,
		joker.effect,
		joker.atlas,
		joker.soul_pos
	)
	new_joker:register()

	if not no_sprite then
		local sprite = SMODS.Sprite:new(
			new_joker.slug,
			SMODS.findModByID("JAIZ").path,
			new_joker.slug .. ".png",
			71,
			95,
			"asset_atli"
		)
		sprite:register()
	end
end

function Jokers()
	if config.backwardsLongJump then
		-- Backwards Long Jump (BLJ)
		-- Gain mult on trigger reset after scored
		-- TODO implement the code for this. seems kinda hard

		-- Create Joker
		local blj = {
			loc = {
				name = "BLJ",
				text = {
					"This Joker gains {X:mult,C:white}X#2#{} Mult if",
					"a card is triggered during scoring",
					"{C:inactive}(Currently {X:mult,C:white}X#1#{C:inactive} Mult)",
				},
			},
			ability_name = "Aiz Backwards Long Jump",
			slug = "aiz_blj",
			ability = {
				extra = {
					Xmult = 1,
					Xmult_mod = 0.1,
				},
			},
			rarity = 4,
			cost = 15,
			unlocked = true,
			discovered = false,
			blueprint_compat = false,
			eternal_compat = true,
		}
		-- Initialize Joker
		init_joker(blj, true)

		-- Set local variables
		SMODS.Jokers.j_aiz_blj.loc_def = function(card)
			return { card.ability.extra.Xmult_mod, card.ability.extra.Xmult }
		end

		-- Calculate
		SMODS.Jokers.j_aiz_blj.calculate = function(card, context)
			if SMODS.end_calculate_context(context) and card.ability.extra > 1 then
				return {
					message = localize({
						type = "variable",
						key = "a_xmult",
						vars = { card.ability.extra.Xmult },
					}),
					Xmult_mod = card.ability.extra.Xmult,
				}
			end
		end
	end
end

function SMODS.INIT.JAIZ()
	if config.allEnabled then
		if config.jokersEnabled then
			Jokers()
		end
	end
end

----------------------------------------------
------------MOD CODE END----------------------
